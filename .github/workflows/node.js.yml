# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: npm install server
        run: npm ci
      - name: npm build server
        run: npm run build

  build-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: npm install client
        run: npm ci
      - name: npm build client
        run: npm run build --if-present


  test-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    strategy:
     matrix:
      node-version: [16.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './server/package-lock.json'
      
      - name: npm install server
        run: npm ci
      - name: npm run test server
        run: npm test

  test-client:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./client

      strategy:
       matrix:
        node-version: [16.x]

      steps:
        - uses: actions/checkout@v4
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
            cache-dependency-path: './client/package-lock.json'
         
        - name: npm install client
          run: npm ci
        - name: npm run test client
          run: npm test


        